Creating Toolbars

This portion will demonstrate how to create a toolbar graphical. It is surprisingly simple. It will require that you create a new project. Follow the steps below to create the project.

1. Select New from the File menu option in the Visual C++ environment.

2. Create a MFC AppWizard(exe) project type.

3. Name the project Toolbargui and save it in the MFC Course \ Chap 5 folder.

4. Step 1. Click off "Document view support and make sure, Single document  is selected.

5. Step 2. and Step 3.    Accept the defaults.

6. Step 4. Last time you were instructed to uncheck all of the features . This time Accept the defaults.

7. Click Finish.  You do not have to go through all the screens.

8. The following classes have been created for you
    CToolbargui
    CMainFrame
    CChild

9. Build and execute the program.  Notice, the toolbar is built for you already. The follow code is located in the Toolbargui.rc file.
/////////////////////////////////////////////////////////////////////////////
//
// Bitmap
//

IDR_MAINFRAME BITMAP MOVEABLE PURE "res\\Toolbar.bmp"

/////////////////////////////////////////////////////////////////////////////
//
// Toolbar
//

IDR_MAINFRAME TOOLBAR DISCARDABLE 16, 15
BEGIN
BUTTON ID_EDIT_CUT
BUTTON ID_EDIT_COPY
BUTTON ID_EDIT_PASTE
    SEPARATOR
BUTTON ID_FILE_PRINT
    SEPARATOR
BUTTON ID_APP_ABOUT
END



IDR_MAINFRAME is the name of the toolbar and it is linked to the Toolbar.bmp bitmap. The buttons are then assigned to the toolbar by the BEGIN and END commands.

10. Execute the Toolbargui program again. You will notice that the Cut , Copy, Paste and Print are all grayed out , while the question mark is not. This is caused by the Help menu option has code written and attached to the menu and toolbar. The next step will be add code to the Cut, Copy, Paste and print menu commands, so they become active as well. 

11. Select the ClassWizard from the View menu. Make sure that the Project is Toolbargui and the class is CMainFrame.

12. In the Object IDs pane , select ID_EDIT_COPY

13. In the Messages pane select the COMMAND message.

14. Add a new function. Name this function OnEditCopy ( the default ).

15. Select Edit code. The window will open to where you can edit the code. Enter the code to add a message box that will display "This will make the copy button active". Title the message box Copy.

16. Build and execute the program again. Try the Copy command on the toolbar and from the menu. You notice that both do the same thing.

17. Follow the above procedure to complete all the menu options. Just display a message box indicating what each menu option and toolbar will do.

18. Buld and execute the program again. All the buttons are now active. 

19. The above steps were using a standard bitmap. The next portion of this lesson will add new items to the menu and the toolbar . In the workspace, in ResourceView tab, open the folder called Toolbar and double click on the IDR_MAINFRAME

20. The toolbar graphic editor is displayed. This is where you will add new items to the toolbar. Note normally the toolbar graphic is created in another graphic editor, but this lesson will create a simple graphic to add to the toolbar. At the top of the screen you will find the toolbar image, with a blank image at the far right. Click on the blank image. It will become the active image for editing.

21. On the right , the toolbox for the graphic tools is located. At the bottom of the toolbox, Click on the colour Red. Then in the toolbox click on the fill tool. Move to the gray square that represents the new toolbar button and click once. It will respond by colouring the square Red.

22. Repeat Step 21 , this time using Black.

23. Now to add two new menu options. In the ResouceView click on the IDR_MAINFRAME resource, located in the Menu folder. The menu is displayed.

24. Under the View menu, add a seperator bar by right clicking on the blank menu option under the Status bar menu option and selecting Properites.

25. In the properties window, click on the Seperator check box. This will add a seperator bar. The seperator bar is a convientent method for seperating options.

26. Under the Seperator bar create a new menu option with the ID of IDM_NEXT and the caption &NEXT. This time, when you create the menu option, specify the status bar  This is done by entering a in Prompt box View the next record. To include a Tooltip this will be displayed in the Prompt box, View the next record.\nNext. Where Next will be the tooptip.

27. Repeat Step 26 for a new menu option  with the ID of IDM_PREVIOUS and the caption &Previous and the Prompt of View the Previous Record\nPrevious.

28. Add code to the NEXT menu option created in Step 26. The code will be a message box that displays "This is where the code for Next menu option is placed." with the title "Next". Repeat the process for the Previous menu option with the message box displaying "This is where the code for the Previous menu option is placed", with the title Previous.

29. Build and execute the program. The menu options work but the toolbar buttons are still not active. To make these new buttons active, they have to be linked to a menu option. This is accomplished by selecting the IDR_MAINFRAME in the Toolbar folder and making the graphic editor active. Select the new Red button.

30. Go to the View menu of the environment and select Properites. This will respond  with displaying the properites of the Red button. The ID assigned right now is ID_BUTTONXXXXX. All that has to be done is change the button ID to the ID of the menu option. In this case it will be IDM_NEXT. Dropdown the list and set the ID.

31. Repeat Step 30 for the Previous button , and assign it the ID of ID_PREVIOUS.

32. Build the application and execute the Toolbargui program. The buttons are now active and when you click on the buttons or the menu options , they both execute the same code.

It is far easier to create menus and toolbars in the graphics environment that in the text mode that was previously demonstrated.

