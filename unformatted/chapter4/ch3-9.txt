Code for OnPaint


OnPaintWindow.h

#ifndef Onpaintwindow_h
#define Onpaintwindow_h

#include <afxwin.h>

class CFirstWindow : public CFrameWnd

{
public:
CFirstWindow( );
afx_msg void OnChar(UINT ch, UINT count, UINT flags);
afx_msg void OnPaint( );
DECLARE_MESSAGE_MAP( );
};

#endif

OnPaintWindow.cpp


#include <afxwin.h>
#include "onpaintwindow.h"

char str[80] = {"This will be displayed"};


CFirstWindow :: CFirstWindow( )
{
RECT NewPlace;
NewPlace.left = 150;

NewPlace.top = 100;
NewPlace.right = 800;
NewPlace.bottom = 600;

Create(NULL, "Message Processing",WS_OVERLAPPEDWINDOW,NewPlace,
NULL,NULL,WS_EX_WINDOWEDGE ,NULL);
}

afx_msg void CFirstWindow :: OnChar(UINT ch, UINT count, UINT flags)
{
CClientDC dc(this);
dc.TextOut(1,1, " ", 3);
wsprintf(str, "This is displayed after a key has been pressed" );
dc.TextOut(10,40,str,strlen(str));
}

afx_msg void CFirstWindow :: OnPaint( )
{
CPaintDC dc(this);
dc.TextOut (1,1,str,strlen(str));
}

OnPaintApplication.h

#ifndef onpaintApplication_h
# define onpaintApplication_h

#include <afxwin.h>

class CFirstApplication : public CWinApp
{
public:

CFirstApplication( );
BOOL InitInstance( );
};

#endif

OnPaintApplication.cpp

#include "OnPaintApplication.h"
#include "OnPaintWindow.h"

CFirstApplication:: CFirstApplication( )
{
;
}

 

BOOL CFirstApplication :: InitInstance( )
{
m_pMainWnd = new CFirstWindow;
m_pMainWnd->ShowWindow(m_nCmdShow);
m_pMainWnd->UpdateWindow( );
return TRUE;
}

Mainfile.cpp

#include <afxwin.h>
#include "OnPaintWindow.h"
#include "OnPaintApplication.h"

BEGIN_MESSAGE_MAP(CFirstWindow, CFrameWnd)
ON_WM_CHAR( )
ON_WM_PAINT( )
END_MESSAGE_MAP( )

CFirstApplication App;

 

Compile the program and run the application. Once the program starts, it will display one line of text. Press a key another line of text will be displayed. Minimize the window and see that the line of text is still displayed. The OnPaint function is causing this to happen. Don't forget to change the compile options in the Project, settings . Remember C++ code generation has to be Debug Multithreaded.

  
