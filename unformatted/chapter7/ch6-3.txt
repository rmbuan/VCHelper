Dialog Boxes Even Further


This may all seem like a lot of work just to get a dialog box open. It is, but the graphical development environments usually create most of the code for the developer ( this portion of the course does not use it yet). It is widely accepted that a programmer should know what the code he/she is writing is doing. This is not possible when using the wizards that come with most modern compilers.

So first go through the long process of creating the dialog and controls in a text editor using a resouces file. Then when this course gets to the Graphical Interface portion of course, using the wizards you will know what the code is doing and if any tweaking is required you will know how to do it.

The format of the resource file is :

DialogBoxName DIALOG X,Y,Width, Height
Features
{
place your controls here that will go on the dialog box
}

The DialogBoxName is the name that you wish to call the dialog box. DIALOG is a keyword to inform the resource compiler that a dialog box is being defined in this file. X and Y are the co-ordinates at where the dialog box will begin to be drawn. Width and Height are self explanatory, they will define how large the dialog box will be. Features { } are where the controls, are going to be placed on the dialog box and going to be described. 

With most objects included in the projects so far, a dialog box can be declared to be a variable of the base class or derived from one. The base class in this case is CDialog. This program, as will most applications, will use a   derived  class from CDialog. It must be kept in your mind that CDialog is derived from CWnd, therefore the programmer still has access to methods declared inside of CWnd.

CDialog has three constructors. CDialog( ) is the simplest and it will be used later when Modeless dialogs are explained. The next two constructors are extremely similar. They only differ by the first parameter and which constructor you use is determined by how you prefer to program. Common practice prefers to use meaningful names where ever possible, but some programmers prefer to use integer values. There is sound reason for each case, so I will describe the other two constructors.

They are declared as 

CDialog(LPCSTR DialogName, CWnd *Owner = NULL) 

CDialog (UINT DialogIdNumber, CWnd *Owner = NULL). 
 
 

As you can see the only difference is using an integer value to identify the dialog box or a name. The second parameter is a pointer to the window that the dialog box belongs to. If the value of NULL ( the default value ) then the dialog box belongs to the main window. 

Where the second parameter is required more is when this course gets into MDI (Multiply Document Interface) style programming. Where it is possible to have more than one window open and the dialog box can be called from any window of your application.

  
