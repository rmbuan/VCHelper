{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f72\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}
{\f159\froman\fcharset238\fprq2 Times New Roman CE;}{\f160\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f162\froman\fcharset161\fprq2 Times New Roman Greek;}{\f163\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f164\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f165\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f166\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f735\fswiss\fcharset238\fprq2 Verdana CE;}
{\f736\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f738\fswiss\fcharset161\fprq2 Verdana Greek;}{\f739\fswiss\fcharset162\fprq2 Verdana Tur;}{\f742\fswiss\fcharset186\fprq2 Verdana Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;
\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green51\blue102;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang4105\langfe1033\cgrid\langnp4105\langfenp1033 \snext0 Normal;}
{\s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs28\lang4105\langfe1033\cgrid\langnp4105\langfenp1033 \sbasedon0 \snext0 heading 1;}{\*\cs10 \additive Default Paragraph Font;}}{\info
{\title DOS Versus Windows}{\author telanis}{\operator Information Technology}{\creatim\yr2000\mo7\dy5\hr22\min6}{\revtim\yr2000\mo7\dy27\hr11\min54}{\version2}{\edmins1}{\nofpages1}{\nofwords0}{\nofchars0}{\*\company telanis corp}{\nofcharsws0}
{\vern8247}}\widowctrl\ftnbj\aenddoc\makebackup\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1800\dgvorigin1440\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \linex0\headery708\footery708\colsx708\endnhere\sectlinegrid360\sectdefaultcl 
{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\fs28\lang4105\langfe1033\cgrid\langnp4105\langfenp1033 {\f72\fs32\cf17 DOS Versus Windows
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang4105\langfe1033\cgrid\langnp4105\langfenp1033 { 
\par }{\cf9 In DOS programming, it is your program that calls the operating system . In Windows programming it works almost the opposite. Your program waits for a message from Windows before it does anything. Then when your prog
ram receives the message it does the appropriate action and then informs Windows that it has completed the action and waits for the next message from Windows. This will all be explained in greater detail when you understand Windows messaging better. Patie
nce.
\par 
\par In the old DOS programming, using Pascal, Cobol, Fortran, C or C++ the languages were primarily sequential in nature. Which means the program started executing code at the designated start; each line of code was then executed until the last statement 
was executed with very little deviation. This type of programming gave the programmer control over how the program was executed. With windows programming, this is not the case.   Windows deals with messages ( user or system responses ), which include a mo
u
se click, mouse move, a key press, or closing of a window that belongs to your program. There is no way a programmer can control what the user is going to do next (in other words what messages are going to be received next) so it is now referred to as eve
nt driven programming.
\par }}