{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f72\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}
{\f159\froman\fcharset238\fprq2 Times New Roman CE;}{\f160\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f162\froman\fcharset161\fprq2 Times New Roman Greek;}{\f163\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f164\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f165\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f166\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f735\fswiss\fcharset238\fprq2 Verdana CE;}
{\f736\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f738\fswiss\fcharset161\fprq2 Verdana Greek;}{\f739\fswiss\fcharset162\fprq2 Verdana Tur;}{\f742\fswiss\fcharset186\fprq2 Verdana Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;
\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green51\blue102;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang4105\langfe1033\cgrid\langnp4105\langfenp1033 \snext0 Normal;}
{\s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs24\lang4105\langfe1033\cgrid\langnp4105\langfenp1033 \sbasedon0 \snext0 heading 1;}{\*\cs10 \additive Default Paragraph Font;}}{\info
{\title What are MFCs}{\author telanis}{\operator Information Technology}{\creatim\yr2000\mo7\dy5\hr22\min2}{\revtim\yr2000\mo7\dy27\hr11\min55}{\version2}{\edmins1}{\nofpages2}{\nofwords477}{\nofchars2719}{\*\company telanis corp}{\nofcharsws0}
{\vern8247}}\widowctrl\ftnbj\aenddoc\makebackup\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1800\dgvorigin1440\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \linex0\headery708\footery708\colsx708\endnhere\sectlinegrid360\sectdefaultcl 
{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\fs24\lang4105\langfe1033\cgrid\langnp4105\langfenp1033 {\f72\fs32\cf17 What are MFCs?
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang4105\langfe1033\cgrid\langnp4105\langfenp1033 {
\par }{\cf9 As you might have guessed, they are a collection of already defined classes that were written in C++ code. They are designed to make windows programming easier and quicker.
\par 
\par These classes use the object-oriented design principles and use multiple layers of inheritance.
\par 
\par MFCs provide many of the common tasks related to windows programming, which also includes memory recovery from the dynamic creation of objects.
\par 
\par These classes were designed on the re-useable code principle. The programmer does not have to re-create an object every time one is required.
\par 
\par MFCs use extensive use of the Application Programming Interface (API) . This is the technique to allow your programs to interact with the windows environment. 
\par 
\par MFCs were first introduced in 1992, with version 1. Visual C++ Version 6 comes with version 6 of the MFC. The difference between all the different versions of MFC, are that they add more functionality. The latest version deals more with the 32
 bit programming world. There really is no reason to go into what the older versions did not do compared to version 6. Just understand that version 7 of MFC is likely to be arriving on the market within the next 12 months.
\par 
\par The Microsoft Foundation Classes were created to assist programmers in dealing with the vast details required when doing windows programming. The MFC\rquote 
s are classes already developed by Microsoft that deal with the Windows environment for the programmer, so all the programmer has to be co
ncerned with is, the program itself, not the Windows environment. Using MFC helps the programmer meet deadlines, assists in locating program bugs, and makes application design changes easier.
\par 
\par MFCs provide an easier and faster way to produce solid code. This course will teach you the basics of programming using MFC\rquote 
s and some tricks and techniques for programming better. One of the best features of using MFC is the fact that the code is portable. Portable code means, a program can be written for Windows 3.1
1 , Windows 95, Windows 98, or Windows NT 4.0 or Windows NT 5.0 ( known as Windows 2000) and the programmer can be assured that the code will run in all environments.
\par 
\par Since the 16 bit world is all but dead, this course will only deal with the 32 bit world
 , which is Windows 95 or newer operating system. But it is interesting, whether or not the 32 bit programming world will work with the new 64 bit programming world, which is due out in the new few years. Microsoft has said it would, but I choose to wait 
and see.
\par 
\par You may have found that Visual C++ has a GUI (Graphic
al User Interface) interface for creating programs. The beginning of this course will do things in the more traditional method, of writing each class and resource using time consuming code writing. Since Visual C++ does not look much like traditional prog
r
amming, I believe that it is better to write the code from scratch.  Therefore when you start to create programs using the Visual interface, the code that the environment generates for you will not be quite so intimidating. If you do not believe in this, 
then you should generate a blank project using the ClassWizard. See if you understand the code.
\par 
\par Later in this course we will make extensive use of the Visual environment to speed up creating of applications.
\par 
\par }}