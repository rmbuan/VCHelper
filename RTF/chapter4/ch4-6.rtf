{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f28\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}
{\f31\froman\fcharset238\fprq2 Times New Roman CE;}{\f32\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f34\froman\fcharset161\fprq2 Times New Roman Greek;}{\f35\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f36\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f37\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f38\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f255\fswiss\fcharset238\fprq2 Verdana CE;}
{\f256\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f258\fswiss\fcharset161\fprq2 Verdana Greek;}{\f259\fswiss\fcharset162\fprq2 Verdana Tur;}{\f262\fswiss\fcharset186\fprq2 Verdana Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;
\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green51\blue102;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}
{\s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{
\s2\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs24\cf9\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 2;}{\*\cs10 \additive Default Paragraph Font;}{
\s15\ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\cf9\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 Body Text 2;}}{\info{\title Introduction to Basic Program}{\author Information Technology}
{\operator buan}{\creatim\yr2000\mo8\dy10\hr13\min47}{\revtim\yr2000\mo8\dy10\hr13\min47}{\version2}{\edmins1}{\nofpages3}{\nofwords296}{\nofchars1692}{\*\company George Brown College}{\nofcharsws2077}{\vern8247}}
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1800\dgvorigin1440\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \linex0\endnhere\sectlinegrid360\sectdefaultcl {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f28\cf17 Code for Message Map Program
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cf9 
\par Now that we know about messages, message macros, message handlers, and device context, it is time to see how they all works together. 
\par First you have to create a new project and call it Messages. Then remember to set the options in the compiler to allow for code generation to be Debug Multithreaded, from the project settings on the menu. Enter the following code. 
\par 
\par MessageWindow.h
\par 
\par #ifndef MessageWindow_h
\par #define MessageWindow_h
\par 
\par #include <afxwin.h>
\par 
\par class CFirstWindow : public CFrameWnd
\par \{
\par public:
\par CFirstWindow();
\par afx_msg void OnChar(UINT ch, UINT count, UINT flags); DECLARE_MESSAGE_MAP ();
\par \};
\par 
\par #endif
\par 
\par MessageWindow.cpp
\par 
\par #include "MessageWindow.h"
\par 
\par char str[80]; // global array
\par 
\par CFirstWindow :: CFirstWindow()
\par \{
\par RECT NewPlace;
\par NewPlace.left = 150;
\par NewPlace.top = 100;
\par 
\par NewPlace.right = 800;
\par NewPlace.bottom = 600;
\par 
\par Create(NULL, "Message Processing",WS_OVERLAPPEDWINDOW,NewPlace,
\par NULL,NULL,WS_EX_WINDOWEDGE ,NULL);
\par \}
\par 
\par afx_msg void CFirstWindow :: OnChar(UINT ch, UINT count, UINT flags)
\par \{
\par CClientDC FirstDeviceContext(this);
\par FirstDeviceContext.TextOut(1,1, " ", 3);
\par wsprintf(str, "%c" , ch);
\par FirstDeviceContext.TextOut(1,1,str,strlen(str));
\par 
\par \}
\par 
\par MessageApplication.h
\par 
\par #ifndef MessageApplication_h
\par # define MessageApplication_h
\par 
\par #include <afxwin.h>
\par 
\par class CFirstApplication : public CWinApp
\par \{
\par public:
\par CFirstApplication();
\par 
\par BOOL InitInstance();
\par \};
\par 
\par #endif
\par 
\par MessageApplication.cpp
\par 
\par #include "MessageApplication.h"
\par #include "MessageWindow.h"
\par 
\par CFirstApplication:: CFirstApplication( )
\par \{
\par ;
\par \}
\par 
\par BOOL CFirstApplication :: InitInstance( )
\par \{
\par m_pMainWnd = new CFirstWindow;
\par m_pMainWnd->ShowWindow(m_nCmdShow);
\par m_pMainWnd->UpdateWindow( );
\par return TRUE;
\par \}
\par 
\par Mainfile.cpp
\par 
\par #include <afxwin.h>
\par 
\par #include "MessageWindow.h"
\par 
\par #include "MessageApplication.h"
\par 
\par BEGIN_MESSAGE_MAP(CFirstWindow, CFrameWnd)
\par ON_WM_CHAR( )
\par END_MESSAGE_MAP( )
\par 
\par CFirstApplication App;
\par 
\par Compile the program and run the application. Don't forget to change the compile options in the Project, settings . Remember C++ code generation has to be Debug Multithreaded.
\par }{
\par }}